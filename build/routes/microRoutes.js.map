{"version":3,"sources":["../../src/routes/microRoutes.js"],"names":["APIVERSION","SHRINKAPI","LOOKUPAPI","SIZEAPI","routes","app","route","get","apiHelp","redirectSlugToUrl","post","addNewURL","lookupDestination","put","req","res","status","send","delete","size","makeSlug","testPage","logger","log"],"mappings":";;;;;;AAAA;;AASA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAMA,aAAa,IAAnB;AACA,IAAMC,YAAY,QAAlB;AACA,IAAMC,YAAY,QAAlB;AACA,IAAMC,UAAU,MAAhB;;AAEA,IAAMC,SAAS,SAATA,MAAS,CAACC,GAAD,EAAS;AACtB;AACAA,MAAIC,KAAJ,CAAU,GAAV,EACGC,GADH,CACOC,wBADP;AAEA;AACAH,MAAIC,KAAJ,CAAU,0BAAV,EACGC,GADH,CACQE,kCADR;;AAGA;AACAJ,MAAIC,KAAJ,OAAcN,UAAd,SAA4BC,SAA5B,EACGS,IADH,CACQC,0BADR;;AAGAN,MAAIC,KAAJ,OAAcN,UAAd,SAA4BE,SAA5B,aACGK,GADH,CACOK,kCADP;AAEE;AAFF,GAGGC,GAHH,CAGO,UAACC,GAAD,EAAKC,GAAL;AAAA,WACHA,IAAIC,MAAJ,CAAW,GAAX,EACGC,IADH,CACQ,kBADR,CADG;AAAA,GAHP;AAME;AANF,GAOGC,MAPH,CAOW,UAACJ,GAAD,EAAKC,GAAL;AAAA,WACPA,IAAIC,MAAJ,CAAW,GAAX,EACEC,IADF,CACO,kBADP,CADO;AAAA,GAPX;AAUA;AACAZ,MAAIC,KAAJ,OAAcN,UAAd,SAA4BG,OAA5B,EACGI,GADH,CACOY,qBADP;AAEA;AACAd,MAAIC,KAAJ,CAAU,uBAAV,EACGC,GADH,CACOa,yBADP;;AAGAf,MAAIC,KAAJ,CAAU,WAAV,EACGC,GADH,CACOc,yBADP;;AAGAhB,MAAIC,KAAJ,CAAU,GAAV,EACGC,GADH,CACO,UAACO,GAAD,EAAKC,GAAL;AAAA,WACHA,IAAIC,MAAJ,CAAW,GAAX,EACGC,IADH,CACQ,sDADR,CADG;AAAA,GADP;;AAMAK,iBAAOC,GAAP,CAAW,MAAX,EAAmB,oBAAnB;AACD,CAvCD;;kBA0CenB,M","file":"microRoutes.js","sourcesContent":["import {\n  addNewURL,\n  lookupDestination,\n  apiHelp,\n  redirectSlugToUrl,\n  testPage,\n  size,\n  makeSlug,\n} from '../controllers/microController';\nimport { logger } from '../utils/logger';\n// available routes\n// / = api info\n// /d3djej  = redirection to actual URL\n// /v1/shrink   = shorten url (body contains encoded long URL)\n// /v1/lookup/de3df3 = lookup slug\n\n// extract this into env vars\nconst APIVERSION = 'v1';\nconst SHRINKAPI = 'shrink';\nconst LOOKUPAPI = 'lookup';\nconst SIZEAPI = 'size';\n\nconst routes = (app) => {\n  // Documentation page\n  app.route('/')\n    .get(apiHelp);\n  // URL micronizer route\n  app.route('/:slug([0-9a-zA-Z]{6,7})')\n    .get (redirectSlugToUrl);\n\n  // generate new micro address\n  app.route(`/${APIVERSION}/${SHRINKAPI}`)\n    .post(addNewURL);\n\n  app.route(`/${APIVERSION}/${LOOKUPAPI}/:slug`)\n    .get(lookupDestination)\n    // UPDATE URL here\n    .put((req,res) =>\n      res.status(501)\n        .send('Not implemented.'))\n    // DELETE URL??\n    .delete( (req,res) =>\n      res.status(501)\n       .send('Not implemented.'))\n  // future version\n  app.route(`/${APIVERSION}/${SIZEAPI}`)\n    .get(size);\n  // for testing\n  app.route('/v1/makeslug/:counter')\n    .get(makeSlug);\n\n  app.route('/testPage')\n    .get(testPage);\n\n  app.route('*')\n    .get((req,res) =>\n      res.status(404)\n        .send('Invalid URL. See documentation <a href=\"/\">here.</a>')\n    );\n\n  logger.log('info', 'Routes registered.');\n};\n\n\nexport default routes;\n"]}